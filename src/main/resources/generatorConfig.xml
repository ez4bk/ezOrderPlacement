<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <properties resource="application.properties" />
    <!-- mysql驱动的位置 这个是MySQL连接的jar包，你需要指定你自己计算机上的jar包的位置-->
<!--    <classPathEntry-->
<!--            location="C:\dev_environment\apache-maven-3.9.6\repository\com\mysql\mysql-connector-j\8.2.0\mysql-connector-j-8.2.0.jar"/>-->
    <classPathEntry
            location="/Users/ez4bk/.m2/repository/com/mysql/mysql-connector-j/8.3.0/mysql-connector-j-8.3.0.jar"/>

    <context id="Tables" targetRuntime="MyBatis3">
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 序列化 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!--toString方法-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.MapperAnnotationPlugin"/>
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- JDBC连接 其中connectionURL后面的newtest改为你创建的数据库，紧跟在后面是数据库连接的账户和密码-->
        <jdbcConnection
                driverClass="com.mysql.cj.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost/commerce"
                userId="root"
                password="123456">
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
         NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址 这里需要你改动，其中targetPackage需要根据你自己创建的目录进行改动 -->
        <javaModelGenerator targetPackage="ez4bk.commerce.orderplacement.entity" targetProject="src/main/java">
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaModelGenerator>

        <!-- 生成mapper xml文件 这里不需要改动 -->
        <sqlMapGenerator targetPackage="ez4bk.commerce.orderplacement.mapper" targetProject="src/main/resources">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>

        <!-- 生成mapper xml对应Client   这里需要改动targetPackage，依据你自己的工程-->
        <javaClientGenerator targetPackage="ez4bk.commerce.orderplacement.mapper" targetProject="src/main/java" type="XMLMAPPER">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!--配置表信息 -->
        <table tableName="customer" domainObjectName="Customer">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
<!--            <oneToMany mappingTable="address" column="id" joinColumn="user_id"/>-->
        </table>
        <table tableName="address" domainObjectName="Address">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="merchant" domainObjectName="Merchant">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="order" domainObjectName="Order">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
<!--            <oneToOne mappingTable="user" column="user_id" joinColumn="id" />-->
<!--            <oneToOne mappingTable="address" column="address_id" joinColumn="id" />-->
        </table>
    </context>
</generatorConfiguration>